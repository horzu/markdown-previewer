{"version":3,"sources":["Components/markdown.js","App.js","reportWebVitals.js","index.js"],"names":["marked","require","setOptions","breaks","renderer","Renderer","Preview","markdown","dangerouslySetInnerHTML","__html","id","App","useState","text","setText","className","name","rows","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAMA,EAASC,EAAQ,IAEvBD,EAAOE,WAAW,CAChBC,QAAQ,IAGV,IAAMC,EAAW,IAAIJ,EAAOK,SAgBbC,MAdf,YAA+B,IAAZC,EAAW,EAAXA,SACjB,OACE,qBAEEC,wBAAyB,CACvBC,OAAQT,EAAOO,EAAU,CAACH,SAAUA,KAEtCM,GAAG,aCeMC,MA1Bf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAQb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,mBAAlB,UAEE,oBAAIA,UAAU,MAAd,yCAEA,0BAAUC,KAAK,OAAON,GAAG,OAAOO,KAAK,KAAKC,MAAOL,EAAME,UAAU,WAAWI,SAX7D,SAACC,GACpBN,EAAQM,EAAEC,OAAOH,UAcb,oBAAIH,UAAU,OAAd,oBACA,cAAC,EAAD,CAASR,SAAUM,UCXZS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1d039a14.chunk.js","sourcesContent":["const marked = require(\"marked\");\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n})\r\n\r\nconst renderer = new marked.Renderer();\r\n\r\nfunction Preview({ markdown }){\r\n  return(\r\n    <div\r\n    \r\n      dangerouslySetInnerHTML={{\r\n        __html: marked(markdown, {renderer: renderer}),\r\n      }}\r\n      id=\"preview\"\r\n    >\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preview;","import { useState } from 'react';\nimport './App.css';\nimport Preview from './Components/markdown';\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n\n  const handleChange = (e) =>{\n    setText(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"text-center px-4\">\n        \n        <h1 className=\"p-4\">Shakar's Markdown Previewer</h1>\n        \n        <textarea name=\"text\" id=\"text\" rows=\"10\" value={text} className=\"textarea\" onChange={handleChange}>\n          \n        </textarea>\n        \n        <h3 className=\"mt-3\">Output</h3>\n        <Preview markdown={text} />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}